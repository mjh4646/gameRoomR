This is the interpreter escape game package. #
#### Created by Mike Higgins#
#### Modified by Brad Luen 1/27/14#
#
#### This function will eventually be used to #
#### Update which location we are in.#
updateInterpreter = function(gameState){#
	#Update First Room#
	#The init is helpful to determine if we have initialized a given location#
	if(is.null(gameState$FirstRoom$Init)){#
		#Need to check if door is locked or unlocked#
		gameState$FirstRoom$DoorUnlocked = FALSE#
		#Need to check to see if the safe is locked or unlocked#
		gameState$FirstRoom$SafeUnlocked = FALSE#
		#Some intro words:#
		cat("Welcome!  This is a beta version of the\nStatistical Testing and Proficiency System (STAPS).\nPlease enter your student ID and press enter.\n")#
		gameState$SID = readline(prompt = "Student ID: ")#
#
		cat("\nGreat! Let's get started.\nYou are in a room.  To view the room, type look(). To look at individual objects, type look(\"OBJECT NAME\")\nwhere \"OBJECT NAME\" is replaced with the name of the object of interest.\nTo take objects, type take(\"OBJECT NAME\").\nTo download available data, type gameData()\n")#
		#We initialized the first room.  #
		#So we set this equal to true#
		gameState$FirstRoom$Init = TRUE#
	}#
	gameState#
}#
#
#Initialize the game state upon startGame#
initInterpreter = function(){#
	#Initialize gameState#
	gameState = list()#
	gameState$Location = "FirstRoom"#
	gameState$Inventory = NULL#
	gameState$Password = 14#
	#Initialize Status#
	gameState = updateInterpreter(gameState)#
#
	#Output gameState#
	gameState	#
}#
#
getLook = function(gameState, obj){#
#
	if(obj == "FirstRoom"){#
		myMap = list()#
		myMap$x = c(0,3,17,20,0,NA,#
				    0,0,3,3,NA,#
				    20,20,17,17,NA,#
				    3,3,17,17,NA,#
				    5,5,9,9,NA,#
				    11,11,16,16,11,NA,#
				    12,12,15.5,15.5)#
		myMap$y = c(0,4,4,0,0,NA,#
				    0,20,20,4,NA,#
				    0,20,20,4,NA,#
				    4,20,20,4,NA,#
				    4,15,15,4,NA,#
				    13,18,18,13,13,NA,#
				    4,8,8,4)#
		myMap$range = c(0,20,0,20)#
		myMap$names = c("floor","leftWall","rightWall","backWall",#
			            "door","picture","safeFront")#
		myCols =      c("tan", "lightblue","lightblue","lightblue",#
					    "white", "white","olivedrab")#
		map(myMap, col = myCols, fill = TRUE)#
		points(c(8,8,14.75,14.75),c(9,9,5.75,5.75), pch = c(1,19,15,15),#
			cex = c(1.75,1.7,1.5,1), col = c("black","gold","white","black"))#
		points(c(12,13.5,15),c(15.5,14.5,17),pch = c("x","x","?"))#
		segments(11,14.5,16,16.5)#
		text(c(7,13.5,13.75),c(16,19,9),c("Door", "Picture","Safe"))#
		cat("In front of you, you see a door, a picture, and a safe.\n")#
	}#
	else if(obj == "pictureFirstRoom"){#
		x = c(1,3,4,5,7)#
		y = c(6,2,10,8,14)#
		myLM = lm(y~x)#
		plot(x,y,xlab = "", ylab = "", xlim = c(0,8), ylim = c(1,15),#
			main = "Regression Line:\ny = 1.5x + 2\nSolve for ?", xaxt = "n", yaxt = "n")#
		abline(myLM)#
		text(x,y+.5,c("(1,6)","(3,2)","(4,10)","(5,8)","(7,?)"))#
	}#
#
	else if(obj == "safeFirstRoom"){#
		cat("It is a safe.\nThere is a screen that allows you to input a double digit number.\nInputting the correct number will unlock the safe\nIt is not the most secure safe in the world.\nType enter(NUMBER) to enter a number.\n")#
	}#
	else if(obj == "doorFirstRoom"){#
		if(gameState$FirstRoom$DoorUnlocked){#
			cat("This is the door to the outside world.  It is currently unlocked.")#
		}#
		else{#
			cat("This is the door to the outside world.  It is currently locked.")#
		}#
	}	#
	else{#
		print(paste("The object ", obj, " cannot be viewed while in this room."))#
	}#
}#
#
unlock = function(gameState,number){#
    if(gameState$Password == number){#
    	print("You did it! You saved the world!")#
    }#
    else{#
    	print("Why are you so bad at this?")#
    }#
}#
#Used to standardize object names.#
getObjName = function(gameState,obj){#
	name = NULL	#
	if(is.null(obj)){#
		name = gameState$Location#
	}#
	else{	#
		#Check if object is a character#
		if(!is.character(obj)){#
			stop("Object in function must be in quotes.\nSee instructions() for details.")#
		}	#
		else{#
			print(obj)#
			obj = tolower(obj)#
			name = paste(c(obj,gameState$Location),collapse = "")#
		}#
	}#
}#
#
useInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	if(is.null(obj)){#
	}#
	else{#
		print(paste("You cannot use the object ", obj))#
	}#
}#
#
enterInterpreter = function(gameState,number){#
	unlock(gameState, number)#
}#
#
lookInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	getLook(gameState, myObj)#
}
library(maps)#
#
#### This is the game interface for R#
#### All games created will use this interface#
#### Created by Mike Higgins#
####  #
#### Game interface needs the following:#
#### A gameState list object.#
####     The gameState list object has the following categories:#
####     Inventory#
####     Location#
#####
#### The following are the functions:#
#### startGame: Starts the game.  Calls initInterpreter to initialize gameState.#
#### saveGame: Stores the gameState into a .dat file (really a .txt)#
#### loadGame: Loads a gameState file#
#### instructions: loads the instructions help file!#
#### inventory: views the inventory#
#### checkGame: Checks to see if the gameState is loaded.  May return an error.#
#####
#### goUp: "You go up, then you go right back down.  Gravity is fascinating, isn't it?"#
####       "for a list of directions, type ?goForward"#
#####
#### The following functions call the corresponding interpreter function#
####    gameStart: Starts the game.  Calls initGameInterpreter#
#### 	takeObj: Takes an object. Calls takeInterpreter#
####    getObj:  Gets an object.  Same as takeObj#
####    openObj: Opens an object. Calls openInterpreter#
####    gameDat: Obtains data. Calls plotInterpreter#
####    look: Looks.  Calls lookInterpreter.  #
####		  If a null parameter, makes a plot or types a description.#
####          If an object parameter, interpreted by lookObjInterpreter#
####    lookObj, lookAt, lookAtObj: See look.#
####    useObj: Uses an object. Calls useInterpreter#
####    talk: Talks to a person.  Calls talkInterpreter#
#
#Create an environment.  #
#This will hide the gameState variable.#
myE = new.env()#
#
#Start game functions#
startGame = function(){#
	#Ignore this#
	# myGS =  mget("gameState", envir = myE, ifnotfound = "NotFound")#
	# if(myGS$gameState == "NotFound"){#
		# gameState = initInterpreter()#
		# assign("gameState",gameState, myE)#
	# }#
	#Use InitInterpreter to initialize the gameState#
	gameState = initInterpreter()#
	assign("gameState",gameState, myE)#
}#
#
startgame = function(){#
	startGame()#
}#
#
#Checks to see if a game is loaded or not.#
#Ignore for now#
# checkGame = function(){#
	# myGS =  mget("gameState", envir = myE, ifnotfound = "NotFound")#
	# if(myGS == "NotFound"){#
		# stop("You need to either start a game or load a game\nbefore #
		  # you are able to use this command.\nType instructions() for more details.")#
	# }#
# }#
#
#Ignore for now#
#loadGame = function(filename){#
#	print(filename)#
#}#
#
instructions = function(){#
	?instructions#
}#
#
inventory = function(){#
	gameState = get("gameState", myE)#
	print(gameState$inventory)#
}#
#
#Use functions#
use = function(obj = NULL){#
	gameState = get("gameState", myE)#
	useInterpreter(gameState, obj)#
}#
#
useobj = function(obj = NULL){#
	use(obj)#
}#
#
useObj = function(obj = NULL){#
	use(obj)#
}#
#
enter = function(number = NULL){#
	gameState = get("gameState", myE)#
	enterInterpreter(gameState, number)#
}#
#
#Take functions#
take = function(obj = NULL){#
	gameState = get("gameState", myE)#
	takeInterpreter(gameState, obj)#
}#
#
takeObj = function(obj = NULL){#
	take(obj)	#
}#
#
takeobj = function(obj = NULL){#
	take(obj)	#
}#
#
getobj = function(obj = NULL){#
	take(obj)	#
}#
#
getObj = function(obj = NULL){#
	take(obj)	#
}#
#
#Look functions#
look = function(obj = NULL){#
	gameState = get("gameState", myE)#
	lookInterpreter(gameState, obj)#
}#
#
lookat = function(obj = NULL){#
	look(obj)#
}#
#
lookAt = function(obj = NULL){#
	look(obj)#
}#
#
lookobj = function(obj = NULL){#
	look(obj)#
}#
#
lookatObj = function(obj = NULL){#
	look(obj)#
}#
#
lookAtobj = function(obj = NULL){#
	look(obj)#
}#
#
lookatobj = function(obj = NULL){#
	look(obj)#
}#
#
lookObj = function(obj = NULL){#
	look(obj)#
}#
#
lookAtObj = function(obj = NULL){#
	look(obj)#
}#
#
#data functions#
gameData = function(obj = NULL){#
	gameState = get("gameState", myE)#
	dataInterpreter(gameState, obj)#
}#
#
gamedata = function(obj = NULL){#
	gameData(obj)#
}
startGame()
look()
look(Picture)
look("Picture")
look("Safe")
enter(14)
enter(10)
enter(9)
unlock = function(gameState,number){#
    if(gameState$Password == number){#
    	print(You did it! You saved the world!)#
    }#
    else{#
    	print(Why are you so bad at this?)#
    }#
}
x=1:6
plot(x)
plot(x,1)
plot(x,1)
plot(x,0)
plot(x,seq0)
x = c(1,2,3,4,5,6)#
        plot(x,seq(0,length(x)))
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)))
library(maps)#
#
#### This is the game interface for R#
#### All games created will use this interface#
#### Created by Mike Higgins#
####  #
#### Game interface needs the following:#
#### A gameState list object.#
####     The gameState list object has the following categories:#
####     Inventory#
####     Location#
#####
#### The following are the functions:#
#### startGame: Starts the game.  Calls initInterpreter to initialize gameState.#
#### saveGame: Stores the gameState into a .dat file (really a .txt)#
#### loadGame: Loads a gameState file#
#### instructions: loads the instructions help file!#
#### inventory: views the inventory#
#### checkGame: Checks to see if the gameState is loaded.  May return an error.#
#####
#### goUp: "You go up, then you go right back down.  Gravity is fascinating, isn't it?"#
####       "for a list of directions, type ?goForward"#
#####
#### The following functions call the corresponding interpreter function#
####    gameStart: Starts the game.  Calls initGameInterpreter#
#### 	takeObj: Takes an object. Calls takeInterpreter#
####    getObj:  Gets an object.  Same as takeObj#
####    openObj: Opens an object. Calls openInterpreter#
####    gameDat: Obtains data. Calls plotInterpreter#
####    look: Looks.  Calls lookInterpreter.  #
####		  If a null parameter, makes a plot or types a description.#
####          If an object parameter, interpreted by lookObjInterpreter#
####    lookObj, lookAt, lookAtObj: See look.#
####    useObj: Uses an object. Calls useInterpreter#
####    talk: Talks to a person.  Calls talkInterpreter#
#
#Create an environment.  #
#This will hide the gameState variable.#
myE = new.env()#
#
#Start game functions#
startGame = function(){#
	#Ignore this#
	# myGS =  mget("gameState", envir = myE, ifnotfound = "NotFound")#
	# if(myGS$gameState == "NotFound"){#
		# gameState = initInterpreter()#
		# assign("gameState",gameState, myE)#
	# }#
	#Use InitInterpreter to initialize the gameState#
	gameState = initInterpreter()#
	assign("gameState",gameState, myE)#
}#
#
startgame = function(){#
	startGame()#
}#
#
#Checks to see if a game is loaded or not.#
#Ignore for now#
# checkGame = function(){#
	# myGS =  mget("gameState", envir = myE, ifnotfound = "NotFound")#
	# if(myGS == "NotFound"){#
		# stop("You need to either start a game or load a game\nbefore #
		  # you are able to use this command.\nType instructions() for more details.")#
	# }#
# }#
#
#Ignore for now#
#loadGame = function(filename){#
#	print(filename)#
#}#
#
instructions = function(){#
	?instructions#
}#
#
inventory = function(){#
	gameState = get("gameState", myE)#
	print(gameState$inventory)#
}#
#
#Use functions#
use = function(obj = NULL){#
	gameState = get("gameState", myE)#
	useInterpreter(gameState, obj)#
}#
#
useobj = function(obj = NULL){#
	use(obj)#
}#
#
useObj = function(obj = NULL){#
	use(obj)#
}#
#
enter = function(number = NULL){#
	gameState = get("gameState", myE)#
	enterInterpreter(gameState, number)#
}#
#
#Take functions#
take = function(obj = NULL){#
	gameState = get("gameState", myE)#
	takeInterpreter(gameState, obj)#
}#
#
takeObj = function(obj = NULL){#
	take(obj)	#
}#
#
takeobj = function(obj = NULL){#
	take(obj)	#
}#
#
getobj = function(obj = NULL){#
	take(obj)	#
}#
#
getObj = function(obj = NULL){#
	take(obj)	#
}#
#
#Look functions#
look = function(obj = NULL){#
	gameState = get("gameState", myE)#
	lookInterpreter(gameState, obj)#
}#
#
lookat = function(obj = NULL){#
	look(obj)#
}#
#
lookAt = function(obj = NULL){#
	look(obj)#
}#
#
lookobj = function(obj = NULL){#
	look(obj)#
}#
#
lookatObj = function(obj = NULL){#
	look(obj)#
}#
#
lookAtobj = function(obj = NULL){#
	look(obj)#
}#
#
lookatobj = function(obj = NULL){#
	look(obj)#
}#
#
lookObj = function(obj = NULL){#
	look(obj)#
}#
#
lookAtObj = function(obj = NULL){#
	look(obj)#
}#
#
#data functions#
gameData = function(obj = NULL){#
	gameState = get("gameState", myE)#
	dataInterpreter(gameState, obj)#
}#
#
gamedata = function(obj = NULL){#
	gameData(obj)#
}
This is the interpreter escape game package. #
#### Created by Mike Higgins#
#### Modified by Brad Luen 1/27/14#
#
#### This function will eventually be used to #
#### Update which location we are in.#
updateInterpreter = function(gameState){#
	#Update First Room#
	#The init is helpful to determine if we have initialized a given location#
	if(is.null(gameState$FirstRoom$Init)){#
		#Need to check if door is locked or unlocked#
		gameState$FirstRoom$DoorUnlocked = FALSE#
		#Need to check to see if the safe is locked or unlocked#
		gameState$FirstRoom$SafeUnlocked = FALSE#
		#Some intro words:#
		cat("Welcome!  This is a beta version of the\nStatistical Testing and Proficiency System (STAPS).\nPlease enter your student ID and press enter.\n")#
		gameState$SID = readline(prompt = "Student ID: ")#
#
		cat("\nGreat! Let's get started.\nYou are in a room.  To view the room, type look(). To look at individual objects, type look(\"OBJECT NAME\")\nwhere \"OBJECT NAME\" is replaced with the name of the object of interest.\nTo take objects, type take(\"OBJECT NAME\").\nTo download available data, type gameData()\n")#
		#We initialized the first room.  #
		#So we set this equal to true#
		gameState$FirstRoom$Init = TRUE#
	}#
	gameState#
}#
#
#Initialize the game state upon startGame#
initInterpreter = function(){#
	#Initialize gameState#
	gameState = list()#
	gameState$Location = "FirstRoom"#
	gameState$Inventory = NULL#
	gameState$Password = 14#
	#Initialize Status#
	gameState = updateInterpreter(gameState)#
#
	#Output gameState#
	gameState	#
}#
#
getLook = function(gameState, obj){#
#
	if(obj == "FirstRoom"){#
		myMap = list()#
		myMap$x = c(0,3,17,20,0,NA,#
				    0,0,3,3,NA,#
				    20,20,17,17,NA,#
				    3,3,17,17,NA,#
				    5,5,9,9,NA,#
				    11,11,16,16,11,NA,#
				    12,12,15.5,15.5)#
		myMap$y = c(0,4,4,0,0,NA,#
				    0,20,20,4,NA,#
				    0,20,20,4,NA,#
				    4,20,20,4,NA,#
				    4,15,15,4,NA,#
				    13,18,18,13,13,NA,#
				    4,8,8,4)#
		myMap$range = c(0,20,0,20)#
		myMap$names = c("floor","leftWall","rightWall","backWall",#
			            "door","picture","safeFront")#
		myCols =      c("tan", "lightblue","lightblue","lightblue",#
					    "white", "white","olivedrab")#
		map(myMap, col = myCols, fill = TRUE)#
		points(c(8,8,14.75,14.75),c(9,9,5.75,5.75), pch = c(1,19,15,15),#
			cex = c(1.75,1.7,1.5,1), col = c("black","gold","white","black"))#
		points(c(12,13.5,15),c(15.5,14.5,17),pch = c("x","x","?"))#
		segments(11,14.5,16,16.5)#
		text(c(7,13.5,13.75),c(16,19,9),c("Door", "Picture","Safe"))#
		cat("In front of you, you see a door, a picture, and a safe.\n")#
	}#
	else if(obj == "pictureFirstRoom"){#
#		x = c(1,3,4,5,7)#
#		y = c(6,2,10,8,14)#
#		myLM = lm(y~x)#
#		plot(x,y,xlab = "", ylab = "", xlim = c(0,8), ylim = c(1,15),#
#			main = "Regression Line:\ny = 1.5x + 2\nSolve for ?", xaxt = "n", yaxt = "n")#
#		abline(myLM)#
#		text(x,y+.5,c("(1,6)","(3,2)","(4,10)","(5,8)","(7,?)"))#
#
        x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)))#
	}#
#
	else if(obj == "safeFirstRoom"){#
		cat("It is a safe.\nThere is a screen that allows you to input a double digit number.\nInputting the correct number will unlock the safe\nIt is not the most secure safe in the world.\nType enter(NUMBER) to enter a number.\n")#
	}#
	else if(obj == "doorFirstRoom"){#
		if(gameState$FirstRoom$DoorUnlocked){#
			cat("This is the door to the outside world.  It is currently unlocked.")#
		}#
		else{#
			cat("This is the door to the outside world.  It is currently locked.")#
		}#
	}	#
	else{#
		print(paste("The object ", obj, " cannot be viewed while in this room."))#
	}#
}#
#
unlock = function(gameState,number){#
    if(gameState$Password == number){#
    	print("You did it! You saved the world!")#
    }#
    else{#
    	print("Why are you so bad at this?")#
    }#
}#
#Used to standardize object names.#
getObjName = function(gameState,obj){#
	name = NULL	#
	if(is.null(obj)){#
		name = gameState$Location#
	}#
	else{	#
		#Check if object is a character#
		if(!is.character(obj)){#
			stop("Object in function must be in quotes.\nSee instructions() for details.")#
		}	#
		else{#
			print(obj)#
			obj = tolower(obj)#
			name = paste(c(obj,gameState$Location),collapse = "")#
		}#
	}#
}#
#
useInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	if(is.null(obj)){#
	}#
	else{#
		print(paste("You cannot use the object ", obj))#
	}#
}#
#
enterInterpreter = function(gameState,number){#
	unlock(gameState, number)#
}#
#
lookInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	getLook(gameState, myObj)#
}
startGame()
look("Picutre")
look("Picture")
look()
look("Picture")
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n")#
        text(x,rep(0,length(x)),x)
plot(x,rep(0,length(x)),type="n")#
        text(x,rep(0,length(x)),x,cex=2)
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n")#
        text(x,rep(0,length(x)),x,cex=3)
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n")#
        text(x,rep(0,length(x)),x,cex=4)
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n")#
        text(x,rep(0,length(x)),x,cex=5)
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n")#
        text(x,rep(0,length(x)),x,cex=4)
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n",xlab="",ylab="")#
        text(x,rep(0,length(x)),x,cex=4)
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n",xlab="",ylab="",tck=0)#
        text(x,rep(0,length(x)),x,cex=4)
plot(x,rep(0,length(x)),type="n",axes=F)
x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n",xlab="",ylab="",axes=F)#
        text(x,rep(0,length(x)),x,cex=4)
This is the interpreter escape game package. #
#### Created by Mike Higgins#
#### Modified by Brad Luen 1/27/14#
#
#### This function will eventually be used to #
#### Update which location we are in.#
updateInterpreter = function(gameState){#
	#Update First Room#
	#The init is helpful to determine if we have initialized a given location#
	if(is.null(gameState$FirstRoom$Init)){#
		#Need to check if door is locked or unlocked#
		gameState$FirstRoom$DoorUnlocked = FALSE#
		#Need to check to see if the safe is locked or unlocked#
		gameState$FirstRoom$SafeUnlocked = FALSE#
		#Some intro words:#
		cat("Welcome!  This is a beta version of the\nStatistical Testing and Proficiency System (STAPS).\nPlease enter your student ID and press enter.\n")#
		gameState$SID = readline(prompt = "Student ID: ")#
#
		cat("\nGreat! Let's get started.\nYou are in a room.  To view the room, type look(). To look at individual objects, type look(\"OBJECT NAME\")\nwhere \"OBJECT NAME\" is replaced with the name of the object of interest.\nTo take objects, type take(\"OBJECT NAME\").\nTo download available data, type gameData()\n")#
		#We initialized the first room.  #
		#So we set this equal to true#
		gameState$FirstRoom$Init = TRUE#
	}#
	gameState#
}#
#
#Initialize the game state upon startGame#
initInterpreter = function(){#
	#Initialize gameState#
	gameState = list()#
	gameState$Location = "FirstRoom"#
	gameState$Inventory = NULL#
	gameState$Password = 14#
	#Initialize Status#
	gameState = updateInterpreter(gameState)#
#
	#Output gameState#
	gameState	#
}#
#
getLook = function(gameState, obj){#
#
	if(obj == "FirstRoom"){#
		myMap = list()#
		myMap$x = c(0,3,17,20,0,NA,#
				    0,0,3,3,NA,#
				    20,20,17,17,NA,#
				    3,3,17,17,NA,#
				    5,5,9,9,NA,#
				    11,11,16,16,11,NA,#
				    12,12,15.5,15.5)#
		myMap$y = c(0,4,4,0,0,NA,#
				    0,20,20,4,NA,#
				    0,20,20,4,NA,#
				    4,20,20,4,NA,#
				    4,15,15,4,NA,#
				    13,18,18,13,13,NA,#
				    4,8,8,4)#
		myMap$range = c(0,20,0,20)#
		myMap$names = c("floor","leftWall","rightWall","backWall",#
			            "door","picture","safeFront")#
		myCols =      c("tan", "lightblue","lightblue","lightblue",#
					    "white", "white","olivedrab")#
		map(myMap, col = myCols, fill = TRUE)#
		points(c(8,8,14.75,14.75),c(9,9,5.75,5.75), pch = c(1,19,15,15),#
			cex = c(1.75,1.7,1.5,1), col = c("black","gold","white","black"))#
		points(c(12,13.5,15),c(15.5,14.5,17),pch = c("x","x","?"))#
		segments(11,14.5,16,16.5)#
		text(c(7,13.5,13.75),c(16,19,9),c("Door", "Picture","Safe"))#
		cat("In front of you, you see a door, a picture, and a safe.\n")#
	}#
	else if(obj == "pictureFirstRoom"){#
#		x = c(1,3,4,5,7)#
#		y = c(6,2,10,8,14)#
#		myLM = lm(y~x)#
#		plot(x,y,xlab = "", ylab = "", xlim = c(0,8), ylim = c(1,15),#
#			main = "Regression Line:\ny = 1.5x + 2\nSolve for ?", xaxt = "n", yaxt = "n")#
#		abline(myLM)#
#		text(x,y+.5,c("(1,6)","(3,2)","(4,10)","(5,8)","(7,?)"))#
#
        x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n",xlab="",ylab="",axes=F)#
        text(x,rep(0,length(x)),x,cex=4)#
	}#
#
	else if(obj == "safeFirstRoom"){#
		cat("It is a safe.\nThere is a screen that allows you to input a number.\nNext to the screen, an inscription says 'ENTER THE MEAN.'\nInputting the correct number will unlock the safe\nIt is not the most secure safe in the world.\nType enter(NUMBER) to enter a number.\n")#
	}#
	else if(obj == "doorFirstRoom"){#
		if(gameState$FirstRoom$DoorUnlocked){#
			cat("This is the door to the outside world.  It is currently unlocked.")#
		}#
		else{#
			cat("This is the door to the outside world.  It is currently locked.")#
		}#
	}	#
	else{#
		print(paste("The object ", obj, " cannot be viewed while in this room."))#
	}#
}#
#
unlock = function(gameState,number){#
    if(gameState$Password == number){#
    	print("You did it! You saved the world!")#
    }#
    else{#
    	print("Why are you so bad at this?")#
    }#
}#
#Used to standardize object names.#
getObjName = function(gameState,obj){#
	name = NULL	#
	if(is.null(obj)){#
		name = gameState$Location#
	}#
	else{	#
		#Check if object is a character#
		if(!is.character(obj)){#
			stop("Object in function must be in quotes.\nSee instructions() for details.")#
		}	#
		else{#
			print(obj)#
			obj = tolower(obj)#
			name = paste(c(obj,gameState$Location),collapse = "")#
		}#
	}#
}#
#
useInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	if(is.null(obj)){#
	}#
	else{#
		print(paste("You cannot use the object ", obj))#
	}#
}#
#
enterInterpreter = function(gameState,number){#
	unlock(gameState, number)#
}#
#
lookInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	getLook(gameState, myObj)#
}
look()
unlock(3.5)
gameState
This is the interpreter escape game package. #
#### Created by Mike Higgins#
#### Modified by Brad Luen 1/27/14#
#
#### This function will eventually be used to #
#### Update which location we are in.#
updateInterpreter = function(gameState){#
	#Update First Room#
	#The init is helpful to determine if we have initialized a given location#
	if(is.null(gameState$FirstRoom$Init)){#
		#Need to check if door is locked or unlocked#
		gameState$FirstRoom$DoorUnlocked = FALSE#
		#Need to check to see if the safe is locked or unlocked#
		gameState$FirstRoom$SafeUnlocked = FALSE#
		#Some intro words:#
		cat("Welcome!  This is a beta version of the\nStatistical Testing and Proficiency System (STAPS).\nPlease enter your student ID and press enter.\n")#
		gameState$SID = readline(prompt = "Student ID: ")#
#
		cat("\nGreat! Let's get started.\nYou are in a room.  To view the room, type look(). To look at individual objects, type look(\"OBJECT NAME\")\nwhere \"OBJECT NAME\" is replaced with the name of the object of interest.\nTo take objects, type take(\"OBJECT NAME\").\nTo download available data, type gameData()\n")#
		#We initialized the first room.  #
		#So we set this equal to true#
		gameState$FirstRoom$Init = TRUE#
	}#
	gameState#
}#
#
#Initialize the game state upon startGame#
initInterpreter = function(){#
	#Initialize gameState#
	gameState = list()#
	gameState$Location = "FirstRoom"#
	gameState$Inventory = NULL#
	gameState$Password = 3.5#
	#Initialize Status#
	gameState = updateInterpreter(gameState)#
#
	#Output gameState#
	gameState	#
}#
#
getLook = function(gameState, obj){#
#
	if(obj == "FirstRoom"){#
		myMap = list()#
		myMap$x = c(0,3,17,20,0,NA,#
				    0,0,3,3,NA,#
				    20,20,17,17,NA,#
				    3,3,17,17,NA,#
				    5,5,9,9,NA,#
				    11,11,16,16,11,NA,#
				    12,12,15.5,15.5)#
		myMap$y = c(0,4,4,0,0,NA,#
				    0,20,20,4,NA,#
				    0,20,20,4,NA,#
				    4,20,20,4,NA,#
				    4,15,15,4,NA,#
				    13,18,18,13,13,NA,#
				    4,8,8,4)#
		myMap$range = c(0,20,0,20)#
		myMap$names = c("floor","leftWall","rightWall","backWall",#
			            "door","picture","safeFront")#
		myCols =      c("tan", "lightblue","lightblue","lightblue",#
					    "white", "white","olivedrab")#
		map(myMap, col = myCols, fill = TRUE)#
		points(c(8,8,14.75,14.75),c(9,9,5.75,5.75), pch = c(1,19,15,15),#
			cex = c(1.75,1.7,1.5,1), col = c("black","gold","white","black"))#
		points(c(12,13.5,15),c(15.5,14.5,17),pch = c("x","x","?"))#
		segments(11,14.5,16,16.5)#
		text(c(7,13.5,13.75),c(16,19,9),c("Door", "Picture","Safe"))#
		cat("In front of you, you see a door, a picture, and a safe.\n")#
	}#
	else if(obj == "pictureFirstRoom"){#
#		x = c(1,3,4,5,7)#
#		y = c(6,2,10,8,14)#
#		myLM = lm(y~x)#
#		plot(x,y,xlab = "", ylab = "", xlim = c(0,8), ylim = c(1,15),#
#			main = "Regression Line:\ny = 1.5x + 2\nSolve for ?", xaxt = "n", yaxt = "n")#
#		abline(myLM)#
#		text(x,y+.5,c("(1,6)","(3,2)","(4,10)","(5,8)","(7,?)"))#
#
        x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n",xlab="",ylab="",axes=F)#
        text(x,rep(0,length(x)),x,cex=4)#
	}#
#
	else if(obj == "safeFirstRoom"){#
		cat("It is a safe.\nThere is a screen that allows you to input a number.\nNext to the screen, an inscription says 'ENTER THE MEAN.'\nInputting the correct number will unlock the safe\nIt is not the most secure safe in the world.\nType enter(NUMBER) to enter a number.\n")#
	}#
	else if(obj == "doorFirstRoom"){#
		if(gameState$FirstRoom$DoorUnlocked){#
			cat("This is the door to the outside world.  It is currently unlocked.")#
		}#
		else{#
			cat("This is the door to the outside world.  It is currently locked.")#
		}#
	}	#
	else{#
		print(paste("The object ", obj, " cannot be viewed while in this room."))#
	}#
}#
#
unlock = function(gameState,number){#
    if(gameState$Password == number){#
    	print("You did it! You saved the world!")#
    }#
    else{#
    	print("Why are you so bad at this?")#
    }#
}#
#Used to standardize object names.#
getObjName = function(gameState,obj){#
	name = NULL	#
	if(is.null(obj)){#
		name = gameState$Location#
	}#
	else{	#
		#Check if object is a character#
		if(!is.character(obj)){#
			stop("Object in function must be in quotes.\nSee instructions() for details.")#
		}	#
		else{#
			print(obj)#
			obj = tolower(obj)#
			name = paste(c(obj,gameState$Location),collapse = "")#
		}#
	}#
}#
#
useInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	if(is.null(obj)){#
	}#
	else{#
		print(paste("You cannot use the object ", obj))#
	}#
}#
#
enterInterpreter = function(gameState,number){#
	unlock(gameState, number)#
}#
#
lookInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	getLook(gameState, myObj)#
}
gameState
look("Safe")
enter(3.5)
This is the interpreter escape game package. #
#### Created by Mike Higgins#
#### Modified by Brad Luen 1/27/14#
#
#### This function will eventually be used to #
#### Update which location we are in.#
updateInterpreter = function(gameState){#
	#Update First Room#
	#The init is helpful to determine if we have initialized a given location#
	if(is.null(gameState$FirstRoom$Init)){#
		#Need to check if door is locked or unlocked#
		gameState$FirstRoom$DoorUnlocked = FALSE#
		#Need to check to see if the safe is locked or unlocked#
		gameState$FirstRoom$SafeUnlocked = FALSE#
		#Some intro words:#
		cat("Welcome!  This is a beta version of the\nStatistical Testing and Proficiency System (STAPS).\nPlease enter your student ID and press enter.\n")#
		gameState$SID = readline(prompt = "Student ID: ")#
#
		cat("\nGreat! Let's get started.\nYou are in a room.  To view the room, type look(). To look at individual objects, type look(\"OBJECT NAME\")\nwhere \"OBJECT NAME\" is replaced with the name of the object of interest.\nTo take objects, type take(\"OBJECT NAME\").\nTo download available data, type gameData()\n")#
		#We initialized the first room.  #
		#So we set this equal to true#
		gameState$FirstRoom$Init = TRUE#
	}#
	gameState#
}#
#
#Initialize the game state upon startGame#
initInterpreter = function(){#
	#Initialize gameState#
	gameState = list()#
	gameState$Location = "FirstRoom"#
	gameState$Inventory = NULL#
	gameState$Password = 3.5#
	#Initialize Status#
	gameState = updateInterpreter(gameState)#
#
	#Output gameState#
	gameState	#
}#
#
getLook = function(gameState, obj){#
#
	if(obj == "FirstRoom"){#
		myMap = list()#
		myMap$x = c(0,3,17,20,0,NA,#
				    0,0,3,3,NA,#
				    20,20,17,17,NA,#
				    3,3,17,17,NA,#
				    5,5,9,9,NA,#
				    11,11,16,16,11,NA,#
				    12,12,15.5,15.5)#
		myMap$y = c(0,4,4,0,0,NA,#
				    0,20,20,4,NA,#
				    0,20,20,4,NA,#
				    4,20,20,4,NA,#
				    4,15,15,4,NA,#
				    13,18,18,13,13,NA,#
				    4,8,8,4)#
		myMap$range = c(0,20,0,20)#
		myMap$names = c("floor","leftWall","rightWall","backWall",#
			            "door","picture","safeFront")#
		myCols =      c("tan", "lightblue","lightblue","lightblue",#
					    "white", "white","olivedrab")#
		map(myMap, col = myCols, fill = TRUE)#
		points(c(8,8,14.75,14.75),c(9,9,5.75,5.75), pch = c(1,19,15,15),#
			cex = c(1.75,1.7,1.5,1), col = c("black","gold","white","black"))#
		points(c(12,13.5,15),c(15.5,14.5,17),pch = c("x","x","?"))#
		segments(11,14.5,16,16.5)#
		text(c(7,13.5,13.75),c(16,19,9),c("Door", "Picture","Safe"))#
		cat("In front of you, you see a door, a picture, and a safe.\n")#
	}#
	else if(obj == "pictureFirstRoom"){#
#		x = c(1,3,4,5,7)#
#		y = c(6,2,10,8,14)#
#		myLM = lm(y~x)#
#		plot(x,y,xlab = "", ylab = "", xlim = c(0,8), ylim = c(1,15),#
#			main = "Regression Line:\ny = 1.5x + 2\nSolve for ?", xaxt = "n", yaxt = "n")#
#		abline(myLM)#
#		text(x,y+.5,c("(1,6)","(3,2)","(4,10)","(5,8)","(7,?)"))#
#
        x = c(1,2,3,4,5,6)#
        plot(x,rep(0,length(x)),type="n",xlab="",ylab="",axes=F)#
        text(x,rep(0,length(x)),x,cex=4)#
	}#
#
	else if(obj == "safeFirstRoom"){#
		cat("It is a safe.\nThere is a screen that allows you to input a number.\nNext to the screen, an inscription says 'ENTER THE MEAN.'\nInputting the correct number will unlock the safe\nIt is not the most secure safe in the world.\nType enter(NUMBER) to enter a number.\n")#
	}#
	else if(obj == "doorFirstRoom"){#
		if(gameState$FirstRoom$DoorUnlocked){#
			cat("This is the door to the outside world.  It is currently unlocked.")#
		}#
		else{#
			cat("This is the door to the outside world.  It is currently locked.")#
		}#
	}	#
	else{#
		print(paste("The object ", obj, " cannot be viewed while in this room."))#
	}#
}#
#
unlock = function(gameState,number){#
    if(gameState$Password == number){#
    	print("You did it! You saved the world!")#
    }#
    else{#
    	print("A sad trombone plays. Try again.")#
    }#
}#
#Used to standardize object names.#
getObjName = function(gameState,obj){#
	name = NULL	#
	if(is.null(obj)){#
		name = gameState$Location#
	}#
	else{	#
		#Check if object is a character#
		if(!is.character(obj)){#
			stop("Object in function must be in quotes.\nSee instructions() for details.")#
		}	#
		else{#
			print(obj)#
			obj = tolower(obj)#
			name = paste(c(obj,gameState$Location),collapse = "")#
		}#
	}#
}#
#
useInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	if(is.null(obj)){#
	}#
	else{#
		print(paste("You cannot use the object ", obj))#
	}#
}#
#
enterInterpreter = function(gameState,number){#
	unlock(gameState, number)#
}#
#
lookInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	getLook(gameState, myObj)#
}
enter(4)
enter(3.5)
enter(3)
This is the interpreter escape game package. #
#### Created by Mike Higgins#
#### Modified by Brad Luen 1/27/14#
#
#### This function will eventually be used to #
#### Update which location we are in.#
updateInterpreter = function(gameState){#
	#Update First Room#
	#The init is helpful to determine if we have initialized a given location#
	if(is.null(gameState$FirstRoom$Init)){#
		#Need to check if door is locked or unlocked#
		gameState$FirstRoom$DoorUnlocked = FALSE#
		#Need to check to see if the safe is locked or unlocked#
		gameState$FirstRoom$SafeUnlocked = FALSE#
		#Some intro words:#
		cat("Welcome!  This is a beta version of the\nStatistical Testing and Proficiency System (STAPS).\nPlease enter your student ID and press enter.\n")#
		gameState$SID = readline(prompt = "Student ID: ")#
#
		cat("\nGreat! Let's get started.\nYou are in a room.  To view the room, type look(). To look at individual objects, type look(\"OBJECT NAME\")\nwhere \"OBJECT NAME\" is replaced with the name of the object of interest.\nTo take objects, type take(\"OBJECT NAME\").\nTo download available data, type gameData()\n")#
		#We initialized the first room.  #
		#So we set this equal to true#
		gameState$FirstRoom$Init = TRUE#
	}#
	gameState#
}#
#
#Initialize the game state upon startGame#
initInterpreter = function(){#
	#Initialize gameState#
	gameState = list()#
	gameState$Location = "FirstRoom"#
	gameState$Inventory = NULL#
	gameState$Data = c(1,2,3,4,5)#
	gameState$Password = mean(gameState$Data)#
	#Initialize Status#
	gameState = updateInterpreter(gameState)#
#
	#Output gameState#
	gameState	#
}#
#
getLook = function(gameState, obj){#
#
	if(obj == "FirstRoom"){#
		myMap = list()#
		myMap$x = c(0,3,17,20,0,NA,#
				    0,0,3,3,NA,#
				    20,20,17,17,NA,#
				    3,3,17,17,NA,#
				    5,5,9,9,NA,#
				    11,11,16,16,11,NA,#
				    12,12,15.5,15.5)#
		myMap$y = c(0,4,4,0,0,NA,#
				    0,20,20,4,NA,#
				    0,20,20,4,NA,#
				    4,20,20,4,NA,#
				    4,15,15,4,NA,#
				    13,18,18,13,13,NA,#
				    4,8,8,4)#
		myMap$range = c(0,20,0,20)#
		myMap$names = c("floor","leftWall","rightWall","backWall",#
			            "door","picture","safeFront")#
		myCols =      c("tan", "lightblue","lightblue","lightblue",#
					    "white", "white","olivedrab")#
		map(myMap, col = myCols, fill = TRUE)#
		points(c(8,8,14.75,14.75),c(9,9,5.75,5.75), pch = c(1,19,15,15),#
			cex = c(1.75,1.7,1.5,1), col = c("black","gold","white","black"))#
		points(c(12,13.5,15),c(15.5,14.5,17),pch = c("x","x","?"))#
		segments(11,14.5,16,16.5)#
		text(c(7,13.5,13.75),c(16,19,9),c("Door", "Picture","Safe"))#
		cat("In front of you, you see a door, a picture, and a safe.\n")#
	}#
	else if(obj == "pictureFirstRoom"){#
        x = c(1,2,3,4,5)#
        plot(x,rep(0,length(x)),type="n",xlab="",ylab="",axes=F)#
        text(x,rep(0,length(x)),x,cex=4)#
	}#
#
	else if(obj == "safeFirstRoom"){#
		cat("It is a safe.\nThere is a screen that allows you to input a number.\nNext to the screen, an inscription says 'ENTER THE MEAN.'\nInputting the correct number will unlock the safe\nIt is not the most secure safe in the world.\nType enter(NUMBER) to enter a number.\n")#
	}#
	else if(obj == "doorFirstRoom"){#
		if(gameState$FirstRoom$DoorUnlocked){#
			cat("This is the door to the outside world.  It is currently unlocked.")#
		}#
		else{#
			cat("This is the door to the outside world.  It is currently locked.")#
		}#
	}	#
	else{#
		print(paste("The object ", obj, " cannot be viewed while in this room."))#
	}#
}#
#
unlock = function(gameState,number){#
    if(gameState$Password == number){#
    	print("You did it! You saved the world!")#
    }#
    else{#
    	print("A sad trombone plays. Try again.")#
    }#
}#
#Used to standardize object names.#
getObjName = function(gameState,obj){#
	name = NULL	#
	if(is.null(obj)){#
		name = gameState$Location#
	}#
	else{	#
		#Check if object is a character#
		if(!is.character(obj)){#
			stop("Object in function must be in quotes.\nSee instructions() for details.")#
		}	#
		else{#
			print(obj)#
			obj = tolower(obj)#
			name = paste(c(obj,gameState$Location),collapse = "")#
		}#
	}#
}#
#
useInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	if(is.null(obj)){#
	}#
	else{#
		print(paste("You cannot use the object ", obj))#
	}#
}#
#
enterInterpreter = function(gameState,number){#
	unlock(gameState, number)#
}#
#
lookInterpreter = function(gameState,obj){#
	myObj = getObjName(gameState,obj)#
	getLook(gameState, myObj)#
}
startGame()
look()
look("Picture")
look("Safe")
enter(3)
